name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GIT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          # terraform_version: 1.4.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: |
          for dir in ./src/envs/prod/*; do
            if [ -d "$dir" ]; then
              echo "Planning $dir"
              terraform fmt -check  "$dir"
            fi
          done

      - name: Terraform Init
        id: init
        run: |
          for dir in ./src/envs/prod/*; do
            if [ -d "$dir" ]; then
              echo "Planning $dir"
              cd $dir
              terraform init
            fi
          done

      - name: Terraform Validate
        id: validate
        run: |
          for dir in ./src/envs/prod/*; do
            if [ -d "$dir" ]; then
              echo "Initialization $dir"
              cd $dir
              terraform validate 
            fi
          done

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: |
          for dir in ./src/envs/prod/*; do
            if [ -d "$dir" ]; then
              echo "Initialization $dir"
              cd $dir
              terraform plan -no-color -input=false -out="$dir/tfplan"  > result
            fi
          done
        continue-on-error: true


      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          for dir in ./src/envs/prod/*; do
            if [ -d "$dir" ]; then
              echo "Initialization $dir"
              cd $dir
              terraform apply -auto-approve -input=false
            fi
          done

